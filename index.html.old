<!DOCTYPE html>
<html>
<head>
  <title>MuleSoft Deployment Tracker</title>
  <style>
    body { font-family: sans-serif; padding: 1rem; }
    table { width: 100%; border-collapse: collapse; margin-top: 1rem; }
    th, td { padding: 0.5rem; border: 1px solid #ccc; }
    th { background: #f0f0f0; }
    .env-dev { color: green; }
    .env-test { color: orange; }
    .env-prod { color: red; }
  </style>
</head>
<body>
  <h1>MuleSoft Deployment Tracker</h1>

  <label for="versionSelect">Select Version:</label>
  <select id="versionSelect"></select>

  <table id="deployTable">
    <thead>
      <tr>
        <th>Environment</th>
        <th>Timestamp</th>
        <th>Commit</th>
        <th>Status</th>
      </tr>
    </thead>
    <tbody></tbody>
  </table>

  <script>
    const versionSelect = document.getElementById("versionSelect");
    const tableBody = document.querySelector("#deployTable tbody");
    let deployments = [];

    async function fetchDeployments() {
      const res = await fetch("data/deployments.json");
      deployments = await res.json();

      const versions = [...new Set(deployments.map(d => d.version))].sort().reverse();
      versions.forEach(v => {
        const opt = document.createElement("option");
        opt.value = v;
        opt.textContent = v;
        versionSelect.appendChild(opt);
      });

      loadVersion(versions[0]);
    }

    function loadVersion(version) {
      const filtered = deployments.filter(d => d.version === version);
      tableBody.innerHTML = '';

      if (filtered.length === 0) {
        tableBody.innerHTML = `<tr><td colspan="4">No deployments for this version.</td></tr>`;
        return;
      }

      filtered.sort((a, b) => a.environment.localeCompare(b.environment));
      filtered.forEach(d => {
        const row = document.createElement("tr");
        row.innerHTML = `
          <td class="env-${d.environment}">${d.environment}</td>
          <td>${d.timestamp}</td>
          <td><code>${d.commit}</code></td>
          <td>${d.status}</td>
        `;
        tableBody.appendChild(row);
      });
    }

    versionSelect.addEventListener("change", e => loadVersion(e.target.value));
    fetchDeployments();
  </script>
</body>
</html>
